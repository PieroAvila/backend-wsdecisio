# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Cliente {
  dniCliente: String!
  nombre: String!
  correo: String!
  telefono: String!
  proyectos: [Proyecto!]
}

type Mantenimiento {
  idMantenimiento: Int!
  codMaquinaria: String!
  fechaInicio: String!
  fechaFin: String
  estado: String!
  maquinaria: Maquinaria!
}

type Maquinaria {
  codMaquinaria: String!
  descripcion: String!
  cantidad: Int!
  estado: String!
  mantenimientos: [Mantenimiento!]
  detalleProyectos: [DetaMaquinaria!]
}

type DetaMaquinaria {
  idDetaMaquinaria: Int!
  idDetaProyecto: Int!
  codMaquinaria: String!
  detaProyecto: DetaProyecto!
  maquinaria: Maquinaria!
}

type Material {
  codMaterial: String!
  descripcion: String!
  cantidad: Int!
  unidadMedida: String!
  detalleProyectos: [Material!]
}

type DetaMaterial {
  idDetaMaterial: Int!
  idDetaProyecto: Int!
  codMaterial: String!
  cantidad: Int!
  cantidadUsada: Int!
  cantidadRestante: Int
  detaProyecto: DetaProyecto!
  material: Material!
}

type DetaProyecto {
  idDetaProyecto: Int!
  codProyecto: String!
  proyecto: Proyecto!
  materiales: [DetaMaterial!]
  maquinarias: [DetaMaquinaria!]
}

type Proyecto {
  codProyecto: String!
  nombre: String!
  cliente: Cliente!
  fechaInicio: String!
  fechaFin: String!
  estado: String!
  costoProyecto: Float!
  detalles: [DetaProyecto!]
  actividades: [Actividad!]
}

type Actividad {
  idActividad: Int!
  codProyecto: String!
  dniPersonal: String!
  tipoActividad: String!
  descripcion: String!
  estado: String!
  duracionEstimada: Int!
  duracionReal: Int
  proyecto: Proyecto!
  personal: Personal!
}

type Usuario {
  usuario: String!
  clave: String!
  dniPersonal: String!
  nombre: String!
  cargo: String
  personal: Personal
}

type Personal {
  dniPersonal: String!
  nombre: String!
  apellido: String!
  edad: Int!
  correo: String!
  telefono: String!
  cuentaBcp: String!
  idCargo: Int
  cargo: Cargo
  usuarios: [Usuario!]
  actividades: [Actividad!]
}

type Cargo {
  idCargo: Int!
  cargo: String
  pagoHora: Float!
  personales: [Personal!]
}

type DetalleCompra {
  idDetalle: Int!
  codCompra: String!
  codigo: String!
  descripcion: String!
  categoria: String!
  cantidad: Int!
  estado: String!
  unidadMedida: String!
  precioUnit: Float!
  subtotal: Float
  fechaCompra: String
  compra: Compra!
}

type Compra {
  codCompra: String!
  rucProveedor: String!
  razonSocial: String!
  costoTotal: Float
  fechaCompra: String!
  proveedor: Proveedor
  detalles: [DetalleCompra!]
}

type Proveedor {
  rucProveedor: String!
  razonSocial: String!
  cuentaBcp: String!
  compras: [Compra!]
}

type Query {
  obtenerCargos: [Cargo!]!
  obtenerConteoCargos: Int!
  obtenerCargoMejorPagado: String
  obtenerMontoTotalHora(cargo: String): Float!
  obtenerCargoPorNombre(cargo: String!): Cargo
  obtenerPersonales: [Personal!]!
  obtenerConteoPersonales: Int!
  obtenerConteoPersonalesConCargo: Int!
  obtenerConteoPersonalesSinCargo: Int!
  obtenerMontoTotalPorHora(edad: Int, cargo: String): Float!
  obtenerMontoTotalPorDia(edad: Int, cargo: String): Float!
  obtenerMontoTotalPorSemana(edad: Int, cargo: String): Float!
  obtenerMontoTotalPorMes(edad: Int, cargo: String): Float!
  obtenerPersonalesPorCargo(cargo: String!): [Personal!]!
  obtenerPersonalesPorEdad(edad: Int!): [Personal!]!
  obtenerCargosDisponibles: [String!]!
  obtenerEdadesDisponibles: [Int!]!
  obtenerUsuarios: [Usuario!]!
  obtenerConteoUsuarios: Int!
  obtenerUsuariosPorDNI(dniPersonal: String!): [Usuario!]!
  obtenerClientes: [Cliente!]!
  obtenerConteoClientes: Int!
  obtenerClientesPorDNI(dniCliente: String!): [Cliente!]!
  obtenerClientesPorNombre(nombre: String!): [Cliente!]!
  obtenerProveedores: [Proveedor!]!
  obtenerConteoProveedores: Int!
  obtenerProveedorPorRUC(rucProveedor: String!): Proveedor
  obtenerProveedorPorRazonSocial(razonSocial: String!): Proveedor
  obtenerCompras: [Compra!]!
  obtenerConteoCompras(desde: String, hasta: String, ruc: String): Int!
  obtenerComprasPorFecha(desde: String!, hasta: String!): [Compra!]!
  obtenerMontoCompras(desde: String, hasta: String, ruc: String): Float!
  obtenerProveedoresDisponibles: [String!]!
  obtenerProveedoresActivos: Int!
  obtenerProveedoresInactivos: Int!
  obtenerDetalleCompra: [DetalleCompra!]!
  obtenerConteoDetallePorCompra(codigo: String): Int!
  obtenerComprasDisponibles: [String!]!
  obtenerMaquinarias: [Maquinaria!]!
}

type Mutation {
  crearCargo(data: CrearCargoInput!): Boolean!
  actualizarCargo(idCargo: Int!, data: ActualizarCargoInput!): Cargo!
  borrarCargo(cargo: String!): Boolean!
  crearPersonal(data: CrearPersonalInput!): Boolean!
  actualizarPersonal(dniPersonal: String!, data: ActualizarPersonalInput!): Personal!
  borrarPersonal(rucProveedor: String!): Boolean!
  crearUsuario(data: CrearUsuarioInput!): Boolean!
  actualizarUsuario(usuario: String!, data: ActualizarUsuarioInput!): Usuario!
  borrarUsuario(usuario: String!): Boolean!
  crearCliente(data: CrearClienteInput!): Boolean!
  actualizarCliente(dniCliente: String!, data: ActualizarClienteInput!): Cliente!
  borrarCliente(dniCliente: String!): Boolean!
  crearProveedor(data: CrearProveedorInput!): Boolean!
  actualizarProveedor(rucProveedor: String!, data: ActualizarProveedorInput!): Proveedor!
  crearCompra(data: CrearCompraInput!): Boolean!
  borrarCompra(codCompra: String!): Boolean!
  crearDetaCompra(data: CrearDetaCompraInput!): Boolean!
  actualizarDetalleCompra(idDetalle: Int!, data: ActualizarDetaCompraInput!): [DetalleCompra!]!
  borrarDetalleCompra(idDetalle: Float!): Boolean!
}

input CrearCargoInput {
  cargo: String!
  pagoHora: Float!
}

input ActualizarCargoInput {
  pagoHora: Float!
}

input CrearPersonalInput {
  dniPersonal: String!
  nombre: String!
  apellido: String!
  edad: Int!
  correo: String!
  telefono: String!
  cuentaBcp: String!
  idCargo: Int!
}

input ActualizarPersonalInput {
  nombre: String
  apellido: String
  edad: Int
  correo: String
  telefono: String
  cuentaBcp: String
  idCargo: Int
}

input CrearUsuarioInput {
  usuario: String!
  clave: String!
  dniPersonal: String!
}

input ActualizarUsuarioInput {
  clave: String!
}

input CrearClienteInput {
  dniCliente: String!
  nombre: String!
  correo: String!
  telefono: String!
}

input ActualizarClienteInput {
  nombre: String
  correo: String
  telefono: String
}

input CrearProveedorInput {
  rucProveedor: String!
  razonSocial: String!
  cuentaBcp: String!
}

input ActualizarProveedorInput {
  cuentaBcp: String
}

input CrearCompraInput {
  codCompra: String!
  rucProveedor: String!
  costoTotal: Float
  fechaCompra: String!
}

input CrearDetaCompraInput {
  codCompra: String!
  codigo: String!
  descripcion: String!
  categoria: String!
  cantidad: Float!
  estado: String
  unidadMedida: String!
  precioUnit: Float!
}

input ActualizarDetaCompraInput {
  descripcion: String
  cantidad: Float
  precioUnit: Float
}